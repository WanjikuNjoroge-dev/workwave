{"ast":null,"code":"var _jsxFileName = \"/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\n// EmployeeDashboard.js\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n        feedbackRequested: false\n      };\n\n      // Send the data to the PHP file\n      fetch('http://localhost/your-php-file.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskObj)\n      }).then(response => {\n        if (response.ok) {\n          // Data was successfully stored in the database\n          console.log('Data stored successfully');\n        } else {\n          console.error('Failed to store data');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  };\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  };\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  };\n  const requestFeedback = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].feedbackRequested = true;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hours Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: task.status,\n                onChange: e => handleStatusChange(index, e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Not Started\",\n                  children: \"Not Started\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"In Progress\",\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Done\",\n                  children: \"Done\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: task.hours,\n                onChange: e => handleHoursChange(index, e.target.valueAsNumber)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [!task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => requestFeedback(index),\n                children: \"Request Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Feedback Requested\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboard, \"+vwCl0fMyE4BhmVQ6E+hOsdXg0Q=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","tasks","setTasks","handleAddTask","trim","taskObj","title","status","hours","feedbackRequested","fetch","method","headers","body","JSON","stringify","then","response","ok","console","log","error","catch","handleStatusChange","index","updatedTasks","handleHoursChange","requestFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","valueAsNumber","_c","$RefreshReg$"],"sources":["/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["// EmployeeDashboard.js\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n        feedbackRequested: false\n      };\n\n      // Send the data to the PHP file\n      fetch('http://localhost/your-php-file.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskObj),\n      })\n      .then((response) => {\n        if (response.ok) {\n          // Data was successfully stored in the database\n          console.log('Data stored successfully');\n        } else {\n          console.error('Failed to store data');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  }\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  }\n\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  }\n\n  const requestFeedback = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].feedbackRequested = true;\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={e => setNewTask(e.target.value)}\n          placeholder=\"Enter new task\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n\n      <div className=\"tasks-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>Task</th>\n              <th>Status</th>\n              <th>Hours Spent</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.map((task, index) => (\n              <tr key={index}>\n                <td>{task.title}</td>\n                <td>\n                  <select value={task.status} onChange={e => handleStatusChange(index, e.target.value)}>\n                    <option value=\"Not Started\">Not Started</option>\n                    <option value=\"In Progress\">In Progress</option>\n                    <option value=\"Done\">Done</option>\n                  </select>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    value={task.hours}\n                    onChange={e => handleHoursChange(index, e.target.valueAsNumber)}\n                  />\n                </td>\n                <td>\n                  {!task.feedbackRequested && (\n                    <button onClick={() => requestFeedback(index)}>\n                      Request Feedback\n                    </button>\n                  )}\n                  {task.feedbackRequested && <span>Feedback Requested</span>}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}