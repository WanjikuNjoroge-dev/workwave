{"ast":null,"code":"var _jsxFileName = \"/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useContext } from 'react';\n// // import { AuthContext } from '../../contexts/AuthContext';\n\n// // const EmployeeDashboard = () => {\n// //   const { isAuthenticated } = useContext(AuthContext);\n\n// //   if (!isAuthenticated) {\n// //     return <div>Please register or login to access the Employee Dashboard.</div>;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h2>Employee Dashboard</h2>\n// //       <p>Welcome to the employee dashboard. Here you can manage your tasks and view reports.</p>\n// //     </div>\n// //   );\n// // }\n\n// // export default EmployeeDashboard;\n\n// import React, { useContext, useState } from 'react';\n// import { AuthContext } from '../../contexts/AuthContext';\n// import './EmployeeDashboard.css';\n\n// const EmployeeDashboard = () => {\n//     const { isAuthenticated } = useContext(AuthContext);\n\n//     const [task, setTask] = useState('');\n//     const [tasks, setTasks] = useState([]);\n//     const [startTime, setStartTime] = useState(null);\n//     const [endTime, setEndTime] = useState(null);\n\n//     if (isAuthenticated) {\n//         return <div>Please register or login to access the Employee Dashboard.</div>;\n//     }\n\n//     const handleTaskSubmit = () => {\n//         setTasks(prevTasks => [...prevTasks, task]);\n//         setTask('');\n//     }\n\n//     return (\n//         <div className=\"dashboard-container\">\n//             <h2>Employee Dashboard</h2>\n\n//             <div className=\"time-recording\">\n//                 <h3>Time Recording</h3>\n//                 <button onClick={() => setStartTime(new Date())}>Start Time</button>\n//                 <button onClick={() => setEndTime(new Date())}>End Time</button>\n//                 {startTime && <p>Started at: {startTime.toLocaleTimeString()}</p>}\n//                 {endTime && <p>Ended at: {endTime.toLocaleTimeString()}</p>}\n//             </div>\n\n//             <div className=\"task-management\">\n//                 <h3>Daily Deliverables Input</h3>\n//                 <input \n//                     type=\"text\"\n//                     value={task}\n//                     onChange={e => setTask(e.target.value)}\n//                     placeholder=\"Enter your task\"\n//                 />\n//                 <button onClick={handleTaskSubmit}>Add Task</button>\n//                 <ul>\n//                     {tasks.map((t, index) => <li key={index}>{t}</li>)}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default EmployeeDashboard;\n\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [morningTask, setMorningTask] = useState('');\n  const [todayGoals, setTodayGoals] = useState('');\n  const [todayTask, setTodayTask] = useState('');\n  const [completedTasks, setCompletedTasks] = useState('');\n  const [taskLink, setTaskLink] = useState('');\n  const [hoursUtilized, setHoursUtilized] = useState('');\n  const [supervisorFeedback, setSupervisorFeedback] = useState('');\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please register or login to access the Employee Dashboard.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Morning Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Morning Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: morningTask,\n        onChange: e => setMorningTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Goals for Today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: todayGoals,\n        onChange: e => setTodayGoals(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Evening Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tasks Completed Today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: completedTasks,\n        onChange: e => setCompletedTasks(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Link to Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskLink,\n        onChange: e => setTaskLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hours Utilized:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hoursUtilized,\n        onChange: e => setHoursUtilized(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Feedback from Supervisor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: supervisorFeedback,\n        onChange: e => setSupervisorFeedback(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-button\",\n        children: \"Submit Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboard, \"Y2TTUBgiNon6X1pb+f72m6SEnsU=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","morningTask","setMorningTask","todayGoals","setTodayGoals","todayTask","setTodayTask","completedTasks","setCompletedTasks","taskLink","setTaskLink","hoursUtilized","setHoursUtilized","supervisorFeedback","setSupervisorFeedback","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["// // import React, { useContext } from 'react';\n// // import { AuthContext } from '../../contexts/AuthContext';\n\n// // const EmployeeDashboard = () => {\n// //   const { isAuthenticated } = useContext(AuthContext);\n\n// //   if (!isAuthenticated) {\n// //     return <div>Please register or login to access the Employee Dashboard.</div>;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h2>Employee Dashboard</h2>\n// //       <p>Welcome to the employee dashboard. Here you can manage your tasks and view reports.</p>\n// //     </div>\n// //   );\n// // }\n\n// // export default EmployeeDashboard;\n\n\n\n// import React, { useContext, useState } from 'react';\n// import { AuthContext } from '../../contexts/AuthContext';\n// import './EmployeeDashboard.css';\n\n// const EmployeeDashboard = () => {\n//     const { isAuthenticated } = useContext(AuthContext);\n\n//     const [task, setTask] = useState('');\n//     const [tasks, setTasks] = useState([]);\n//     const [startTime, setStartTime] = useState(null);\n//     const [endTime, setEndTime] = useState(null);\n\n//     if (isAuthenticated) {\n//         return <div>Please register or login to access the Employee Dashboard.</div>;\n//     }\n\n//     const handleTaskSubmit = () => {\n//         setTasks(prevTasks => [...prevTasks, task]);\n//         setTask('');\n//     }\n\n//     return (\n//         <div className=\"dashboard-container\">\n//             <h2>Employee Dashboard</h2>\n\n//             <div className=\"time-recording\">\n//                 <h3>Time Recording</h3>\n//                 <button onClick={() => setStartTime(new Date())}>Start Time</button>\n//                 <button onClick={() => setEndTime(new Date())}>End Time</button>\n//                 {startTime && <p>Started at: {startTime.toLocaleTimeString()}</p>}\n//                 {endTime && <p>Ended at: {endTime.toLocaleTimeString()}</p>}\n//             </div>\n\n//             <div className=\"task-management\">\n//                 <h3>Daily Deliverables Input</h3>\n//                 <input \n//                     type=\"text\"\n//                     value={task}\n//                     onChange={e => setTask(e.target.value)}\n//                     placeholder=\"Enter your task\"\n//                 />\n//                 <button onClick={handleTaskSubmit}>Add Task</button>\n//                 <ul>\n//                     {tasks.map((t, index) => <li key={index}>{t}</li>)}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default EmployeeDashboard;\n\n\n\n\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n  \n  const [morningTask, setMorningTask] = useState('');\n  const [todayGoals, setTodayGoals] = useState('');\n  \n  const [todayTask, setTodayTask] = useState('');\n  const [completedTasks, setCompletedTasks] = useState('');\n  const [taskLink, setTaskLink] = useState('');\n  const [hoursUtilized, setHoursUtilized] = useState('');\n  const [supervisorFeedback, setSupervisorFeedback] = useState('');\n\n  if (isAuthenticated) {\n    return <div>Please register or login to access the Employee Dashboard.</div>;\n  }\n\n  \n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-form\">\n        <h3>Morning Entry</h3>\n        <label>Morning Task:</label>\n        <textarea value={morningTask} onChange={e => setMorningTask(e.target.value)} />\n        \n        <label>Goals for Today:</label>\n        <textarea value={todayGoals} onChange={e => setTodayGoals(e.target.value)} />\n      </div>\n      \n      <div className=\"dashboard-form\">\n        <h3>Evening Entry</h3>\n        <label>Tasks Completed Today:</label>\n        <textarea value={completedTasks} onChange={e => setCompletedTasks(e.target.value)} />\n        \n        <label>Link to Tasks:</label>\n        <input type=\"text\" value={taskLink} onChange={e => setTaskLink(e.target.value)} />\n\n        <label>Hours Utilized:</label>\n        <input type=\"text\" value={hoursUtilized} onChange={e => setHoursUtilized(e.target.value)} />\n        \n        <label>Feedback from Supervisor:</label>\n        <textarea value={supervisorFeedback} onChange={e => setSupervisorFeedback(e.target.value)} />\n        \n        <button className=\"dashboard-button\">Submit Entry</button>\n      </div>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAgB,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EAEnD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEhE,IAAIM,eAAe,EAAE;IACnB,oBAAOH,OAAA;MAAAkB,QAAA,EAAK;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9E;EAGA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,qBAAqB;IAAAL,QAAA,gBAClClB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtB,OAAA;QAAAkB,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BtB,OAAA;QAAUwB,KAAK,EAAEpB,WAAY;QAACqB,QAAQ,EAAEC,CAAC,IAAIrB,cAAc,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/EtB,OAAA;QAAAkB,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/BtB,OAAA;QAAUwB,KAAK,EAAElB,UAAW;QAACmB,QAAQ,EAAEC,CAAC,IAAInB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eAENtB,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBtB,OAAA;QAAAkB,QAAA,EAAO;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCtB,OAAA;QAAUwB,KAAK,EAAEd,cAAe;QAACe,QAAQ,EAAEC,CAAC,IAAIf,iBAAiB,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErFtB,OAAA;QAAAkB,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAEZ,QAAS;QAACa,QAAQ,EAAEC,CAAC,IAAIb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElFtB,OAAA;QAAAkB,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9BtB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAEV,aAAc;QAACW,QAAQ,EAAEC,CAAC,IAAIX,gBAAgB,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5FtB,OAAA;QAAAkB,QAAA,EAAO;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCtB,OAAA;QAAUwB,KAAK,EAAER,kBAAmB;QAACS,QAAQ,EAAEC,CAAC,IAAIT,qBAAqB,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE7FtB,OAAA;QAAQuB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAApB,EAAA,CA9CKD,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAgDvB,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}