{"ast":null,"code":"var _jsxFileName = \"/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskLink, setNewTaskLink] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // if (!isAuthenticated) {\n  //     return <div>Please register or login to access the Employee Dashboard.</div>;\n  // }\n\n  // const handleAddTask = () => {\n  //   if (newTask.trim()) {\n  //     const taskObj = {\n  //       title: newTask,\n  //       status: 'Not Started',\n  //       hours: 0,\n  //       feedbackRequested: false\n  //     };\n  //     setTasks([...tasks, taskObj]);\n  //     setNewTask('');\n  //   }\n  // }\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n        taskLink: newTaskLink,\n        // Link to the task\n        feedbackRequested: false\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n      setNewTaskLink(''); // Reset the link field after adding the task\n    }\n  };\n\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  };\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  };\n  const requestFeedback = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].feedbackRequested = true;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-grid\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-title\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: task.status,\n          onChange: e => handleStatusChange(index, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not Started\",\n            children: \"Not Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: task.hours,\n          onChange: e => handleHoursChange(index, e.target.valueAsNumber),\n          placeholder: \"Add hours spent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), task.taskLink && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: task.taskLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), !task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => requestFeedback(index),\n          children: \"Request Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Feedback Requested\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-corner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Supervisor's Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Excellent work on the XYZ project. Keep it up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboard, \"KvvNabzbpMHkViZtXhCNDxtP/wo=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","newTaskLink","setNewTaskLink","tasks","setTasks","handleAddTask","trim","taskObj","title","status","hours","taskLink","feedbackRequested","handleStatusChange","index","updatedTasks","handleHoursChange","requestFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","valueAsNumber","href","rel","_c","$RefreshReg$"],"sources":["/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const [newTask, setNewTask] = useState('');\n  const [newTaskLink, setNewTaskLink] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // if (!isAuthenticated) {\n  //     return <div>Please register or login to access the Employee Dashboard.</div>;\n  // }\n\n  // const handleAddTask = () => {\n  //   if (newTask.trim()) {\n  //     const taskObj = {\n  //       title: newTask,\n  //       status: 'Not Started',\n  //       hours: 0,\n  //       feedbackRequested: false\n  //     };\n  //     setTasks([...tasks, taskObj]);\n  //     setNewTask('');\n  //   }\n  // }\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n        taskLink: newTaskLink,  // Link to the task\n        feedbackRequested: false\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n      setNewTaskLink(''); // Reset the link field after adding the task\n    }\n  }\n\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  }\n\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  }\n\n  const requestFeedback = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].feedbackRequested = true;\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={e => setNewTask(e.target.value)}\n          placeholder=\"Enter new task\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n\n      <div className=\"tasks-grid\">\n        {tasks.map((task, index) => (\n          <div key={index} className=\"task-card\">\n            <span className=\"task-title\">{task.title}</span>\n            <select value={task.status} onChange={e => handleStatusChange(index, e.target.value)}>\n              <option value=\"Not Started\">Not Started</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Done\">Done</option>\n            </select>\n            <input\n              type=\"number\"\n              value={task.hours}\n              onChange={e => handleHoursChange(index, e.target.valueAsNumber)}\n              placeholder=\"Add hours spent\"\n            />\n            {task.taskLink && <a href={task.taskLink} target=\"_blank\" rel=\"noopener noreferrer\">View Work</a>}\n            {!task.feedbackRequested && (\n              <button onClick={() => requestFeedback(index)}>\n                Request Feedback\n              </button>\n            )}\n            {task.feedbackRequested && <span>Feedback Requested</span>}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"feedback-corner\">\n        <h3>Supervisor's Feedback</h3>\n        {/* We should get this from backend also ---This is a placeholder. You can render actual feedbacks from the supervisor here. */}\n        <p>Excellent work on the XYZ project. Keep it up!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}