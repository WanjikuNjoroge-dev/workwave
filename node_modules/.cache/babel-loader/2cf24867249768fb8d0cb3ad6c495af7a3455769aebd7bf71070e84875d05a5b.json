{"ast":null,"code":"var _jsxFileName = \"/home/codequeen/Learning/workwave/src/components/ManagerDashboard/ManagerDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useContext, useState } from 'react';\n// import { AuthContext } from '../../contexts/AuthContext';\n// import './ManagerDashboard.css';\n\n// const ManagerDashboard = () => {\n//   const { isAuthenticated } = useContext(AuthContext);\n\n//   const [employees, setEmployees] = useState([\n//     {\n//       name: 'John Doe',\n//       tasksCompleted: 'Design Homepage',\n//       hoursSpent: 5,\n//       taskLink: 'https://task-link.com/1',\n//       remainingTasks: 'Design Dashboard',\n//       feedback: ''\n//     },\n//     {\n//       name: 'Jane Smith',\n//       tasksCompleted: 'Develop API',\n//       hoursSpent: 7,\n//       taskLink: 'https://task-link.com/2',\n//       remainingTasks: 'API Documentation',\n//       feedback: ''\n//     }\n//     // ... Add more employee objects as required\n//   ]);\n\n//   // if (!isAuthenticated) {\n//   //   return <div>Please register or login to access the Manager Dashboard.</div>;\n//   // }\n\n//   return (\n//     <div className=\"manager-dashboard\">\n//       <h2>Manager Dashboard</h2>\n//       <p>Welcome to the manager dashboard. Here you can oversee employee tasks and provide feedback.</p>\n\n//       <h3>Employee Tasks Overview</h3>\n//       <div className=\"employee-grid\">\n//         {employees.map((employee, index) => (\n//           <div key={index} className=\"employee-card\">\n//             <h4>{employee.name}</h4>\n//             <p><strong>Tasks Completed:</strong> {employee.tasksCompleted}</p>\n//             <p><strong>Hours Spent:</strong> {employee.hoursSpent}</p>\n//             <p><a href={employee.taskLink} target=\"_blank\" rel=\"noopener noreferrer\">View Work</a></p>\n//             <p><strong>Remaining Tasks:</strong> {employee.remainingTasks}</p>\n//             <textarea \n//               placeholder=\"Provide feedback...\"\n//               value={employee.feedback} \n//               onChange={(e) => {\n//                 const updatedEmployees = [...employees];\n//                 updatedEmployees[index].feedback = e.target.value;\n//                 setEmployees(updatedEmployees);\n//               }}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ManagerDashboard;\n\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './DashboardStyles.css'; // Unified style file for both dashboards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [employees, setEmployees] = useState([{\n    name: 'John Doe',\n    tasksCompleted: 'Design Homepage',\n    hoursSpent: 5,\n    taskLink: 'https://task-link.com/1',\n    remainingTasks: 'Design Dashboard',\n    feedback: '',\n    feedbackRequested: true\n  }, {\n    name: 'Jane Smith',\n    tasksCompleted: 'Develop API',\n    hoursSpent: 7,\n    taskLink: 'https://task-link.com/2',\n    remainingTasks: 'API Documentation',\n    feedback: '',\n    feedbackRequested: false\n  }\n  // ... Add more employee objects as required\n  ]);\n\n  // if (!isAuthenticated) {\n  //   return <div>Please register or login to access the Manager Dashboard.</div>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manager-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manager Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the manager dashboard. Here you can oversee employee tasks and provide feedback.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-requests\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Feedback Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), employees.filter(emp => emp.feedbackRequested).map((employee, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [employee.name, \" has requested feedback for: \", employee.tasksCompleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Employee Tasks Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-grid\",\n      children: employees.map((employee, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: employee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tasks Completed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }, this), \" \", employee.tasksCompleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hours Spent:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }, this), \" \", employee.hoursSpent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: employee.taskLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Remaining Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this), \" \", employee.remainingTasks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Provide feedback...\",\n          value: employee.feedback,\n          onChange: e => {\n            const updatedEmployees = [...employees];\n            updatedEmployees[index].feedback = e.target.value;\n            setEmployees(updatedEmployees);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagerDashboard, \"C31/5SNy4lyfa6qu4JtCTi7cQek=\");\n_c = ManagerDashboard;\nexport default ManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","ManagerDashboard","_s","isAuthenticated","employees","setEmployees","name","tasksCompleted","hoursSpent","taskLink","remainingTasks","feedback","feedbackRequested","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","emp","map","employee","index","href","target","rel","placeholder","value","onChange","e","updatedEmployees","_c","$RefreshReg$"],"sources":["/home/codequeen/Learning/workwave/src/components/ManagerDashboard/ManagerDashboard.js"],"sourcesContent":["// import React, { useContext, useState } from 'react';\n// import { AuthContext } from '../../contexts/AuthContext';\n// import './ManagerDashboard.css';\n\n// const ManagerDashboard = () => {\n//   const { isAuthenticated } = useContext(AuthContext);\n  \n//   const [employees, setEmployees] = useState([\n//     {\n//       name: 'John Doe',\n//       tasksCompleted: 'Design Homepage',\n//       hoursSpent: 5,\n//       taskLink: 'https://task-link.com/1',\n//       remainingTasks: 'Design Dashboard',\n//       feedback: ''\n//     },\n//     {\n//       name: 'Jane Smith',\n//       tasksCompleted: 'Develop API',\n//       hoursSpent: 7,\n//       taskLink: 'https://task-link.com/2',\n//       remainingTasks: 'API Documentation',\n//       feedback: ''\n//     }\n//     // ... Add more employee objects as required\n//   ]);\n\n//   // if (!isAuthenticated) {\n//   //   return <div>Please register or login to access the Manager Dashboard.</div>;\n//   // }\n\n//   return (\n//     <div className=\"manager-dashboard\">\n//       <h2>Manager Dashboard</h2>\n//       <p>Welcome to the manager dashboard. Here you can oversee employee tasks and provide feedback.</p>\n      \n//       <h3>Employee Tasks Overview</h3>\n//       <div className=\"employee-grid\">\n//         {employees.map((employee, index) => (\n//           <div key={index} className=\"employee-card\">\n//             <h4>{employee.name}</h4>\n//             <p><strong>Tasks Completed:</strong> {employee.tasksCompleted}</p>\n//             <p><strong>Hours Spent:</strong> {employee.hoursSpent}</p>\n//             <p><a href={employee.taskLink} target=\"_blank\" rel=\"noopener noreferrer\">View Work</a></p>\n//             <p><strong>Remaining Tasks:</strong> {employee.remainingTasks}</p>\n//             <textarea \n//               placeholder=\"Provide feedback...\"\n//               value={employee.feedback} \n//               onChange={(e) => {\n//                 const updatedEmployees = [...employees];\n//                 updatedEmployees[index].feedback = e.target.value;\n//                 setEmployees(updatedEmployees);\n//               }}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ManagerDashboard;\n\n\n\n\n\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './DashboardStyles.css'; // Unified style file for both dashboards\n\nconst ManagerDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const [employees, setEmployees] = useState([\n    {\n      name: 'John Doe',\n      tasksCompleted: 'Design Homepage',\n      hoursSpent: 5,\n      taskLink: 'https://task-link.com/1',\n      remainingTasks: 'Design Dashboard',\n      feedback: '',\n      feedbackRequested: true\n    },\n    {\n      name: 'Jane Smith',\n      tasksCompleted: 'Develop API',\n      hoursSpent: 7,\n      taskLink: 'https://task-link.com/2',\n      remainingTasks: 'API Documentation',\n      feedback: '',\n      feedbackRequested: false\n    }\n    // ... Add more employee objects as required\n  ]);\n\n  // if (!isAuthenticated) {\n  //   return <div>Please register or login to access the Manager Dashboard.</div>;\n  // }\n\n  return (\n    <div className=\"manager-dashboard\">\n      <h2>Manager Dashboard</h2>\n      <p>Welcome to the manager dashboard. Here you can oversee employee tasks and provide feedback.</p>\n\n      <div className=\"feedback-requests\">\n        <h3>Feedback Requests</h3>\n        {employees.filter(emp => emp.feedbackRequested).map((employee, index) => (\n          <div key={index}>\n            <p>{employee.name} has requested feedback for: {employee.tasksCompleted}</p>\n          </div>\n        ))}\n      </div>\n\n      <h3>Employee Tasks Overview</h3>\n      <div className=\"employee-grid\">\n        {employees.map((employee, index) => (\n          <div key={index} className=\"employee-card\">\n            <h4>{employee.name}</h4>\n            <p><strong>Tasks Completed:</strong> {employee.tasksCompleted}</p>\n            <p><strong>Hours Spent:</strong> {employee.hoursSpent}</p>\n            <p><a href={employee.taskLink} target=\"_blank\" rel=\"noopener noreferrer\">View Work</a></p>\n            <p><strong>Remaining Tasks:</strong> {employee.remainingTasks}</p>\n            <textarea \n              placeholder=\"Provide feedback...\"\n              value={employee.feedback} \n              onChange={(e) => {\n                const updatedEmployees = [...employees];\n                updatedEmployees[index].feedback = e.target.value;\n                setEmployees(updatedEmployees);\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ManagerDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}