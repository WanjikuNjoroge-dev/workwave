{"ast":null,"code":"var _jsxFileName = \"/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [feedback, setFeedback] = useState({});\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please register or login to access the Employee Dashboard.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        isCompleted: false,\n        feedback: ''\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  };\n  const handleMarkAsDone = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isCompleted = true;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: task.isCompleted ? 'completed' : '',\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), !task.isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMarkAsDone(index),\n            children: \"Mark as Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), task.isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Feedback:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: feedback[index] || '',\n              onChange: e => setFeedback({\n                ...feedback,\n                [index]: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeDashboard, \"JVD2MQfcXBz3In3IS6zZl6zB78E=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","tasks","setTasks","feedback","setFeedback","children","fileName","_jsxFileName","lineNumber","columnNumber","handleAddTask","trim","taskObj","title","isCompleted","handleMarkAsDone","index","updatedTasks","className","type","value","onChange","e","target","placeholder","onClick","map","task","_c","$RefreshReg$"],"sources":["/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n    const { isAuthenticated } = useContext(AuthContext);\n\n    const [newTask, setNewTask] = useState('');\n    const [tasks, setTasks] = useState([]);\n    const [feedback, setFeedback] = useState({});\n\n    if (!isAuthenticated) {\n        return <div>Please register or login to access the Employee Dashboard.</div>;\n    }\n\n    const handleAddTask = () => {\n        if (newTask.trim()) {\n            const taskObj = {\n                title: newTask,\n                isCompleted: false,\n                feedback: ''\n            };\n            setTasks([...tasks, taskObj]);\n            setNewTask('');\n        }\n    }\n\n    const handleMarkAsDone = (index) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[index].isCompleted = true;\n        setTasks(updatedTasks);\n    }\n\n    return (\n        <div className=\"dashboard-container\">\n            <h2>Employee Dashboard</h2>\n\n            <div className=\"task-input\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={e => setNewTask(e.target.value)}\n                    placeholder=\"Enter new task\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n\n            <div className=\"tasks-list\">\n                <h3>Tasks</h3>\n                <ul>\n                    {tasks.map((task, index) => (\n                        <li key={index}>\n                            <span className={task.isCompleted ? 'completed' : ''}>\n                                {task.title}\n                            </span>\n                            {!task.isCompleted && (\n                                <button onClick={() => handleMarkAsDone(index)}>\n                                    Mark as Done\n                                </button>\n                            )}\n                            {task.isCompleted && (\n                                <div className=\"feedback\">\n                                    <label>Feedback:</label>\n                                    <textarea\n                                        value={feedback[index] || ''}\n                                        onChange={e =>\n                                            setFeedback({ ...feedback, [index]: e.target.value })\n                                        }\n                                    />\n                                </div>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}