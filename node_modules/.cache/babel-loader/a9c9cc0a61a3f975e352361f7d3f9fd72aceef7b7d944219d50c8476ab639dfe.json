{"ast":null,"code":"var _jsxFileName = \"/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // if (!isAuthenticated) {\n  //     return <div>Please register or login to access the Employee Dashboard.</div>;\n  // }\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n        feedbackRequested: false\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  };\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  };\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  };\n  const requestFeedback = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].feedbackRequested = true;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: task.status,\n            onChange: e => handleStatusChange(index, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Not Started\",\n              children: \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"In Progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Done\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: task.hours,\n            onChange: e => handleHoursChange(index, e.target.valueAsNumber),\n            placeholder: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), !task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => requestFeedback(index),\n            children: \"Request Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), task.feedbackRequested && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Feedback Requested\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 56\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeDashboard, \"+vwCl0fMyE4BhmVQ6E+hOsdXg0Q=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","tasks","setTasks","handleAddTask","trim","taskObj","title","status","hours","feedbackRequested","handleStatusChange","index","updatedTasks","handleHoursChange","requestFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","valueAsNumber","_c","$RefreshReg$"],"sources":["/home/codequeen/Learning/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n    const { isAuthenticated } = useContext(AuthContext);\n\n    const [newTask, setNewTask] = useState('');\n    const [tasks, setTasks] = useState([]);\n\n    // if (!isAuthenticated) {\n    //     return <div>Please register or login to access the Employee Dashboard.</div>;\n    // }\n\n    const handleAddTask = () => {\n        if (newTask.trim()) {\n            const taskObj = {\n                title: newTask,\n                status: 'Not Started',\n                hours: 0,\n                feedbackRequested: false\n            };\n            setTasks([...tasks, taskObj]);\n            setNewTask('');\n        }\n    }\n\n    const handleStatusChange = (index, status) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[index].status = status;\n        setTasks(updatedTasks);\n    }\n\n    const handleHoursChange = (index, hours) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[index].hours = hours;\n        setTasks(updatedTasks);\n    }\n\n    const requestFeedback = (index) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[index].feedbackRequested = true;\n        setTasks(updatedTasks);\n    }\n\n    return (\n        <div className=\"dashboard-container\">\n            <h2>Employee Dashboard</h2>\n\n            <div className=\"task-input\">\n                <input\n                    type=\"text\"\n                    value={newTask}\n                    onChange={e => setNewTask(e.target.value)}\n                    placeholder=\"Enter new task\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n\n            <div className=\"tasks-list\">\n                <h3>Tasks</h3>\n                <ul>\n                    {tasks.map((task, index) => (\n                        <li key={index}>\n                            <span>{task.title}</span>\n                            <select value={task.status} onChange={e => handleStatusChange(index, e.target.value)}>\n                                <option value=\"Not Started\">Not Started</option>\n                                <option value=\"In Progress\">In Progress</option>\n                                <option value=\"Done\">Done</option>\n                            </select>\n                            <input\n                                type=\"number\"\n                                value={task.hours}\n                                onChange={e => handleHoursChange(index, e.target.valueAsNumber)}\n                                placeholder=\"Hours\"\n                            />\n                            {!task.feedbackRequested && (\n                                <button onClick={() => requestFeedback(index)}>\n                                    Request Feedback\n                                </button>\n                            )}\n                            {task.feedbackRequested && <span>Feedback Requested</span>}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}