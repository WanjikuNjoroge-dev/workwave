{"ast":null,"code":"var _jsxFileName = \"/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  };\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  };\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  };\n  const handleSubmitTasks = () => {\n    // Prepare data for submission to the server\n    const dataToSubmit = tasks.map(task => ({\n      title: task.title,\n      status: task.status,\n      hours: task.hours\n    }));\n\n    // Set the submitting state to prevent duplicate submissions\n    setSubmitting(true);\n\n    // Send data to the server (you should replace 'submitTasks.php' with your actual PHP endpoint)\n    fetch('http://localhost/workwave/submitTasks.php', {\n      method: 'POST',\n      body: JSON.stringify(dataToSubmit)\n    }).then(response => response.text()).then(data => {\n      // Handle the server's response here\n      console.log(data);\n      setSubmitting(false); // Reset the submitting state\n    }).catch(error => {\n      console.error(error);\n      setSubmitting(false); // Reset the submitting state in case of an error\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-grid\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-title\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: task.status,\n          onChange: e => handleStatusChange(index, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not Started\",\n            children: \"Not Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: task.hours,\n          onChange: e => handleHoursChange(index, e.target.valueAsNumber),\n          placeholder: \"Add hours spent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitTasks,\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Submitting...' : 'Submit Tasks'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboard, \"ss1VHhxjDJwKrNgymECTS0n6JRo=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","tasks","setTasks","isSubmitting","setSubmitting","handleAddTask","trim","taskObj","title","status","hours","handleStatusChange","index","updatedTasks","handleHoursChange","handleSubmitTasks","dataToSubmit","map","task","fetch","method","body","JSON","stringify","then","response","text","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","valueAsNumber","disabled","_c","$RefreshReg$"],"sources":["/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [isSubmitting, setSubmitting] = useState(false);\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  }\n\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  }\n\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  }\n\n  const handleSubmitTasks = () => {\n    // Prepare data for submission to the server\n    const dataToSubmit = tasks.map(task => ({\n      title: task.title,\n      status: task.status,\n      hours: task.hours,\n    }));\n\n    // Set the submitting state to prevent duplicate submissions\n    setSubmitting(true);\n\n    // Send data to the server (you should replace 'submitTasks.php' with your actual PHP endpoint)\n    fetch('http://localhost/workwave/submitTasks.php', {\n      method: 'POST',\n      body: JSON.stringify(dataToSubmit),\n    })\n      .then(response => response.text())\n      .then(data => {\n        // Handle the server's response here\n        console.log(data);\n        setSubmitting(false); // Reset the submitting state\n      })\n      .catch(error => {\n        console.error(error);\n        setSubmitting(false); // Reset the submitting state in case of an error\n      });\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={e => setNewTask(e.target.value)}\n          placeholder=\"Enter new task\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n\n      <div className=\"tasks-grid\">\n        {tasks.map((task, index) => (\n          <div key={index} className=\"task-card\">\n            <span className=\"task-title\">{task.title}</span>\n            <select value={task.status} onChange={e => handleStatusChange(index, e.target.value)}>\n              <option value=\"Not Started\">Not Started</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Done\">Done</option>\n            </select>\n            <input\n              type=\"number\"\n              value={task.hours}\n              onChange={e => handleHoursChange(index, e.target.valueAsNumber)}\n              placeholder=\"Add hours spent\"\n            />\n          </div>\n        ))}\n      </div>\n\n      <button onClick={handleSubmitTasks} disabled={isSubmitting}>\n        {isSubmitting ? 'Submitting...' : 'Submit Tasks'}\n      </button>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}