{"ast":null,"code":"var _jsxFileName = \"/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboard = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  };\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  };\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  };\n  const handleDataSubmission = () => {\n    // Prepare the data to send to the server (replace with actual data)\n    const dataToSubmit = {\n      title: 'Task Title',\n      status: 'Not Started',\n      hours: 0\n    };\n\n    // Send a POST request to the server\n    fetch('http://localhost/workwave/employeedashboard.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataToSubmit)\n    }).then(response => response.text()).then(data => {\n      // Handle the response from the server (e.g., show a success message)\n      console.log(data);\n    }).catch(error => {\n      // Handle any errors\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-grid\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleDataSubmission,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboard, \"+vwCl0fMyE4BhmVQ6E+hOsdXg0Q=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","jsxDEV","_jsxDEV","EmployeeDashboard","_s","isAuthenticated","newTask","setNewTask","tasks","setTasks","handleAddTask","trim","taskObj","title","status","hours","handleStatusChange","index","updatedTasks","handleHoursChange","handleDataSubmission","dataToSubmit","fetch","method","headers","body","JSON","stringify","then","response","text","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","_c","$RefreshReg$"],"sources":["/home/wanjiku/dev/workwave/src/components/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport './EmployeeDashboard.css';\n\nconst EmployeeDashboard = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  const [newTask, setNewTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      const taskObj = {\n        title: newTask,\n        status: 'Not Started',\n        hours: 0,\n      };\n      setTasks([...tasks, taskObj]);\n      setNewTask('');\n    }\n  }\n\n  const handleStatusChange = (index, status) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].status = status;\n    setTasks(updatedTasks);\n  }\n\n  const handleHoursChange = (index, hours) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].hours = hours;\n    setTasks(updatedTasks);\n  }\n\n  const handleDataSubmission = () => {\n    // Prepare the data to send to the server (replace with actual data)\n    const dataToSubmit = {\n      title: 'Task Title',\n      status: 'Not Started',\n      hours: 0,\n    };\n\n    // Send a POST request to the server\n    fetch('http://localhost/workwave/employeedashboard.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataToSubmit),\n    })\n      .then(response => response.text())\n      .then(data => {\n        // Handle the response from the server (e.g., show a success message)\n        console.log(data);\n      })\n      .catch(error => {\n        // Handle any errors\n        console.error(error);\n      });\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={e => setNewTask(e.target.value)}\n          placeholder=\"Enter new task\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n\n      <div className=\"tasks-grid\">\n        {tasks.map((task, index) => (\n          <div key={index} className=\"task-card\">\n            {/* ... (existing task display code) */}\n          </div>\n        ))}\n      </div>\n\n      <button className=\"submit-button\" onClick={handleDataSubmission}>Submit</button>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}